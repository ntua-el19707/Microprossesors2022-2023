#define F_CPU 16000000UL
#include<avr/io.h>
#include<avr/interrupt.h>
#include<util/delay.h>
#include <stdio.h>


uint16_t one_wire_reset(){
    DDRD |= (1 <<PD4);//set pd4 as output
    PORTD &= ( 0 <<PD4);
    
    _delay_us(480);
    
    DDRD &= (0<<PD4);//set PD4 as input
    PORTD &= (0<<PD4);//disable  pull up
    
    _delay_us(100);//wati 100us for coonected divixe to tranfer prensence pulle
    
    uint8_t  pin ;
    pin = PIND ;
    
    _delay_us(380);
    //if pd4  == 0 => anapokrithike siskeui
      if((pin & 0x10) == 0x10){
          return 0x8000;
      }  
    return 0x0001 ;
       
}
uint8_t one_wire_receive_bit(){
    DDRD |= (1<<PD4);
    PORTD &= (0<<PD4);
    
    //2us
    _delay_us(2);
    
    DDRD &= (0<<PD4);
    PORTD &= (0<<PD4);
    
    _delay_us(10); 
    
    uint8_t pin ;
    pin = PIND;
    if((pin & 0x10) == 0x00 ){
        _delay_us(49);
        return 0x01 ; 
        
    }
    _delay_us(49);
    return 0 ;
    
    
}
void one_wire_transmit_bit(uint8_t bits){

    
    DDRD |=(1<<PD4);
    PORTD &=(0<<PD4);
    
    _delay_us(2);
    if((bits&0x01) == 0){
           PORTD |=(1<<PD4);
    }
    else{
           PORTD &=(0<<PD4);
    }
    _delay_us(58);
    DDRD &= (0<<PD4);//set PD4 as input
    PORTD &= (0<<PD4);//disable  pull up
    _delay_us(1);
    
}
uint8_t one_wire_receive_byte(){
    uint8_t ret = 0 ;
    for(uint8_t i = 0 ;i<8; i++ ){
        //9bits ;
        ret  = ret << 1; 
       if(one_wire_receive_bit() == 0) {
           ret |= 0 ;
       }   
       else{
           ret != 0x08;
       }
    }
    return ret ;
}
void one_wire_transmit_byte(uint8_t byte){
   //uint8_t bits = byte  ;
    for(uint8_t i = 0 ;i<8; i++ ){
        //9bits ;
        if((byte & 0x01) = 0){
            one_wire_transmit_bit(0);
        }else{
                 one_wire_transmit_bit(1);
        }
        byte = byte << 1 ; 
    }
    
}
uint16_t returntemp(){
    uint16_t ret=0 ;
    if(one_wire_reset() == 0x8000){
        return 0x8000;//device not connected
    }
    one_wire_transmit_byte(0xCC);
    one_wire_transmit_byte(0x44);
    one_wire_reset();
    one_wire_transmit_byte(0xCC);
    one_wire_transmit_byte(0xBE);
    uint8_t LSB = one_wire_receive_byte();
    uint8_t MSB = one_wire_receive_byte();
    ret += MSB ;
    ret = ret << 8; 
    ret+=LSB;
    return ret ;
    
}